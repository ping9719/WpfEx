<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ping9719.WpfEx</name>
    </assembly>
    <members>
        <member name="T:Ping9719.WpfEx.Enum2BoolConverter">
            <summary>
            将枚举转为布尔
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.Enum2IntConverter">
            <summary>
            将枚举转为数字
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.Enum2StrConverter">
            <summary>
            将枚举转为字符串（支持Description特性）
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.List2StrConverter">
            <summary>
            将数组、集合按照默认逗号分隔转为字符串
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.EnumHelp">
            <summary>
            枚举帮助扩展类
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.EnumHelp.GetAttributeDescription(System.Enum)">
            <summary>
            得到枚举特性Description
            </summary>
            <param name="obj">枚举</param>
            <returns>返回特性中的说明文本，没有找到特性返回null</returns>
        </member>
        <member name="T:Ping9719.WpfEx.ImageFormat">
            <summary>
            图片格式
            </summary>
        </member>
        <member name="F:Ping9719.WpfEx.ImageFormat.Bmp">
            <summary>
            位图 (BMP) 图像格式
            </summary>
        </member>
        <member name="F:Ping9719.WpfEx.ImageFormat.Gif">
            <summary>
            图形交换格式 (GIF) 图像格式
            </summary>
        </member>
        <member name="F:Ping9719.WpfEx.ImageFormat.Jpeg">
            <summary>
            联合图像专家组 (JPEG) 图像格式
            </summary>
        </member>
        <member name="F:Ping9719.WpfEx.ImageFormat.Png">
            <summary>
             W3C 可移植网络图形 (PNG) 图像格式
            </summary>
        </member>
        <member name="F:Ping9719.WpfEx.ImageFormat.Tiff">
            <summary>
            标记图像文件格式 (TIFF) 图像格式
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.WpfHelp">
            <summary>
            wpf扩展帮助
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.WpfHelp.SaveToImg(System.Windows.FrameworkElement,System.String,Ping9719.WpfEx.ImageFormat,System.Windows.Media.Brush)">
            <summary>
            保存到图片
            </summary>
            <param name="visual">用户控件，控件等，不建议窗体</param>
            <param name="fileName">全文件名</param>
            <param name="imageFormat">文件格式（针对png,jpg已做优化）</param>
            <param name="background">绘画画布颜色，png默认透明,jpg默认白色</param>
        </member>
        <member name="M:Ping9719.WpfEx.WpfHelp.SaveToImg(System.Windows.FrameworkElement,Ping9719.WpfEx.ImageFormat,System.Windows.Media.Brush)">
            <summary>
            保存到图片到流
            </summary>
            <param name="visual">用户控件，控件等，不建议窗体</param>
            <param name="imageFormat">文件格式（针对png,jpg已做优化）</param>
            <param name="background">绘画画布颜色，png默认透明,jpg默认白色</param>
        </member>
        <member name="T:Ping9719.WpfEx.Mvvm.BindableBase">
            <summary>
            对 INotifyPropertyChanged 的实现
            </summary>
            <remarks>
            代码列子：
            <code>
            //XML代码
            &lt;Button Content="{Binding Txt}"/&gt;
            
            //在窗体中设置绑定数据源
            this.DataContext = new MainWindowViewModel()
            
            //ViewModel类
            public class MainWindowViewModel : BindableBase
            {
                private string _Txt = "按钮";
                public string Title
                {
                    get { return _Txt; }
                    set { SetProperty(ref _Txt, value); }
                }
            }
            </code>
            </remarks>
        </member>
        <member name="E:Ping9719.WpfEx.Mvvm.BindableBase.PropertyChanged">
            <summary>
            在属性值更改时发生。
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)">
            <summary>
            检查属性是否已经与所需的值匹配。 设置属性并仅在必要时通知侦听器。 
            </summary>
            <typeparam name="T">属性的类型</typeparam>
            <param name="storage">设置的属性，需要有get;set;</param>
            <param name="value">设置的值</param>
            <param name="propertyName"> 用于通知侦听器的属性的名称。 该值是可选的，可以在从支持CallerMemberName的编译器中调用时自动提供。 </param>
            <returns>如果值被更改，则为True，如果现有值与期望值匹配，则为false。 </returns>
        </member>
        <member name="M:Ping9719.WpfEx.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.Action,System.String)">
            <summary>
            检查属性是否已经与所需的值匹配。 设置属性并仅在必要时通知侦听器。 
            </summary>
            <typeparam name="T">属性的类型</typeparam>
            <param name="storage">设置的属性，需要有get;set;</param>
            <param name="value">设置的值</param>
            <param name="onChanged">更改属性值后调用的操作。 </param>
            <param name="propertyName"> 用于通知侦听器的属性的名称。 该值是可选的，可以在从支持CallerMemberName的编译器中调用时自动提供。 </param>
            <returns>如果值被更改，则为True，如果现有值与期望值匹配，则为false。 </returns>
        </member>
        <member name="M:Ping9719.WpfEx.Mvvm.BindableBase.RaisePropertyChanged(System.String)">
            <summary>
            引发此对象的PropertyChanged事件。
            </summary>
            <param name="propertyName">用于通知侦听器的属性的名称。 该值是可选的，可以在从支持<see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/>的编译器中调用时自动提供。 </param>
        </member>
        <member name="M:Ping9719.WpfEx.Mvvm.BindableBase.OnPropertyChanged(System.String)">
            <summary>
            引发此对象的PropertyChanged事件。
            </summary>
            <param name="propertyName">用于通知侦听器的属性的名称。</param>
        </member>
        <member name="M:Ping9719.WpfEx.Mvvm.BindableBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            引发此对象的PropertyChanged事件。
            </summary>
            <param name="args">这是 PropertyChangedEventArgs</param>
        </member>
        <member name="T:Ping9719.WpfEx.Mvvm.DelegateCommand">
            <summary>
            委托一个命名
            </summary>
            <remarks>
            代码列子：
            <code>
            //XML代码
            &lt;Button Command="{Binding MyCommand}" Content="按钮"/&gt;
            
            //在窗体中设置绑定数据源
            this.DataContext = new MainWindowViewModel()
            
            //ViewModel类
            public class MainWindowViewModel : BindableBase
            {
                public ICommand MyCommand { get => new DelegateCommand(My); }
                //执行方法
                public void My()
                {
                    //code
                }
            }
            </code>
            </remarks>
        </member>
        <member name="M:Ping9719.WpfEx.Mvvm.DelegateCommand.#ctor(System.Action)">
            <summary>
            创建实列
            </summary>
            <param name="executeMethod">一个方法</param>
        </member>
        <member name="M:Ping9719.WpfEx.Mvvm.DelegateCommand.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            创建实列
            </summary>
            <param name="executeMethod">一个方法</param>
            <param name="canExecuteMethod">是否可以执行此方式。使用方式：() => true</param>
        </member>
        <member name="T:Ping9719.WpfEx.Mvvm.DelegateCommand`1">
            <summary>
            委托一个带参数的命名
            </summary>
            <typeparam name="T">参数的类型，不能为null</typeparam>
            <remarks>
            代码列子：
            <code>
            //XML代码
            &lt;Button Command="{Binding MyCommand}" CommandParameter="abc" Content="按钮"/&gt;
            
            //在窗体中设置绑定数据源
            this.DataContext = new MainWindowViewModel()
            
            //ViewModel类
            public class MainWindowViewModel : BindableBase
            {
                public ICommand MyCommand { get => new DelegateCommand&lt;string&gt;(My); }
                //执行方法
                public void My(string obj)
                {
                    //code
                }
            }
            </code>
            </remarks>
        </member>
        <member name="M:Ping9719.WpfEx.Mvvm.DelegateCommand`1.#ctor(System.Action{`0})">
            <summary>
            创建实列
            </summary>
            <param name="executeMethod">带参数的一个方法</param>
        </member>
        <member name="M:Ping9719.WpfEx.Mvvm.DelegateCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})">
            <summary>
            创建实列
            </summary>
            <param name="executeMethod">带参数的一个方法</param>
            <param name="canExecuteMethod">带参数的一个方法并返回bool。使用方法：(obj) => true</param>
        </member>
        <member name="T:Ping9719.WpfEx.IotDevice">
            <summary>
            IotPlc.xaml 的交互逻辑
            </summary>
            <summary>
            IotDevice
            </summary>
        </member>
        <member name="E:Ping9719.WpfEx.IotDevice.UrnClick">
            <summary>
            气缸点击推或回。返回的OriginalSource参数为object[]，1为bool（true为推）；2为原绑定数据
            </summary>
        </member>
        <member name="E:Ping9719.WpfEx.IotDevice.ServoClick">
            <summary>
            伺服点击的操作。返回的OriginalSource参数为object[]，1为枚举；2为新数据；3为原绑定数据
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.IotDevice.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.DeviceStateData">
            <summary>
            设备数据
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceStateData.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceStateData.GroupName">
            <summary>
            组名
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceStateData.IsOk">
            <summary>
            是否ok状态
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceStateData.Tag">
            <summary>
            自定义数据
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.DeviceUrnData">
            <summary>
            设备气缸数据
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceUrnData.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceUrnData.GroupName">
            <summary>
            组名
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceUrnData.IsGoTo">
            <summary>
            是否推到位
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceUrnData.IsRetTo">
            <summary>
            是否回到位
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceUrnData.Tag">
            <summary>
            自定义数据
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.DeviceServoData">
            <summary>
            设备伺服数据
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceServoData.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceServoData.GroupName">
            <summary>
            组名
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceServoData.JogSpeed">
            <summary>
            手动模式速度
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceServoData.AutoSpeed">
            <summary>
            自动模式速度
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceServoData.Location">
            <summary>
            伺服当前位置
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceServoData.IsJog">
            <summary>
            是否主页显示为手动模式
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.DeviceServoData.Tag">
            <summary>
            自定义数据
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.ServoClickType">
            <summary>
            伺服运动位置类型
            </summary>
        </member>
        <member name="F:Ping9719.WpfEx.ServoClickType.SetSpeed">
            <summary>
            设置速度
            </summary>
        </member>
        <member name="F:Ping9719.WpfEx.ServoClickType.MoveTo">
            <summary>
            运动到指定位置
            </summary>
        </member>
        <member name="F:Ping9719.WpfEx.ServoClickType.StartDotAdd">
            <summary>
            开始点动增加
            </summary>
        </member>
        <member name="F:Ping9719.WpfEx.ServoClickType.EndDotAdd">
            <summary>
            开始点动增加
            </summary>
        </member>
        <member name="F:Ping9719.WpfEx.ServoClickType.StartDotSub">
            <summary>
            开始点动减少
            </summary>
        </member>
        <member name="F:Ping9719.WpfEx.ServoClickType.EndDotSub">
            <summary>
            开始点动减少
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.IotServo">
            <summary>
            工业控件：伺服
            </summary>
            <summary>
            IotServo
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.IotServo.#ctor">
            <summary>
            工业控件：伺服
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotServo.Text">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotServo.Location">
            <summary>
            当前位置
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotServo.IsFold">
            <summary>
            是否折叠
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotServo.ModelSpeedHome">
            <summary>
            主页显示的模式速度
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.IotServo.SetModelSpeedHomeName(System.String)">
            <summary>
            搜索指定名称并设为主界面展示
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Ping9719.WpfEx.IotServo.ModelSpeeds">
            <summary>
            全部的模式速度
            </summary>
        </member>
        <member name="E:Ping9719.WpfEx.IotServo.LocationChange">
            <summary>
            尝试改变伺服的位置时
            </summary>
        </member>
        <member name="E:Ping9719.WpfEx.IotServo.SpeedChange">
            <summary>
            尝试改变伺服的速度时
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.IotServo.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.ServoSpeed">
            <summary>
            伺服模式速度
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.ServoSpeed.Name">
            <summary>
            模式名称
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.ServoSpeed.Speed">
            <summary>
            当前速度
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.IotServo2">
            <summary>
            工业控件：伺服
            </summary>
            <summary>
            IotServo2
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.IotServo2.#ctor">
            <summary>
            工业控件：伺服
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotServo2.Text">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotServo2.Location">
            <summary>
            当前位置
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotServo2.Speed1">
            <summary>
            速度1，默认手动速度
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotServo2.Speed2">
            <summary>
            速度2，默认自动速度
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotServo2.IsFold">
            <summary>
            是否折叠
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotServo2.IsVisSpeed1">
            <summary>
            是否主页中显示速度1和模式，默认true
            </summary>
        </member>
        <member name="E:Ping9719.WpfEx.IotServo2.LocationChange">
            <summary>
            尝试改变伺服的位置时
            </summary>
        </member>
        <member name="E:Ping9719.WpfEx.IotServo2.SpeedChange">
            <summary>
            尝试改变伺服的速度时
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.IotServo2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.IotState">
            <summary>
            工业控件：传感器状态
            </summary>
            <summary>
            IotState
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.IotState.#ctor">
            <summary>
            工业控件：传感器状态
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotState.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotState.IsOk">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="E:Ping9719.WpfEx.IotState.Click">
            <summary>
            单击图标时
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.IotState.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.IotUrn">
            <summary>
            工业控件：气缸
            </summary>
            <summary>
            IotUrn
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.IotUrn.#ctor">
            <summary>
            工业控件：气缸
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotUrn.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotUrn.IsButBadge1">
            <summary>
            时候显示按钮1上面的标记
            </summary>
        </member>
        <member name="E:Ping9719.WpfEx.IotUrn.ButClick1">
            <summary>
            单击按钮1
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.IotUrn.IsButBadge2">
            <summary>
            时候显示按钮2上面的标记
            </summary>
        </member>
        <member name="E:Ping9719.WpfEx.IotUrn.ButClick2">
            <summary>
            单击按钮2
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.IotUrn.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.TextBoxMulti">
            <summary>
            多行文本框
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.TextBoxMulti.#ctor">
            <summary>
            初始化多行文本框
            </summary>
        </member>
        <member name="T:Ping9719.WpfEx.UserControlBase">
            <summary>
            对用户控件的扩展
            </summary>
        </member>
        <member name="M:Ping9719.WpfEx.UserControlBase.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="E:Ping9719.WpfEx.UserControlBase.LoadedVisibleFirst">
            <summary>
            首次加载并显示控件时发生
            </summary>
        </member>
        <member name="E:Ping9719.WpfEx.UserControlBase.LoadedVisible">
            <summary>
            加载并显示控件时发生
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.UserControlBase.IsLoadedVisible">
            <summary>
            是否已加载并显示界面
            </summary>
        </member>
        <member name="P:Ping9719.WpfEx.UserControlBase.IsInDesignMode">
            <summary>
            是否处于设计模式
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
