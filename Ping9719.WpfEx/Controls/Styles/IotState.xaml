<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:Ping9719.WpfEx"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol">

    <ResourceDictionary.MergedDictionaries>
        <!--HandyControl-->
        <!--<ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml"/>-->
        <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="IotStateStyle" TargetType="{x:Type local:IotState}">
        <Setter Property="OkBrush" Value="{DynamicResource DarkSuccessBrush}"/>
        <Setter Property="NotOkBrush" Value="{DynamicResource DarkOpacityBrush}"/>
        <Setter Property="InteriorHeight" Value="auto"/>
        <Setter Property="hc:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IotState}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding hc:BorderElement.CornerRadius}"
                            x:Name="border">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="8*"></ColumnDefinition>
                                <ColumnDefinition Width="2*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <ToggleButton Grid.Column="1" Width="auto" Height="{TemplateBinding InteriorHeight}" Margin="0,2" BorderThickness="0" IsChecked="{TemplateBinding IsOk}" Style="{StaticResource ToggleButtonFlip}">
                                <hc:StatusSwitchElement.CheckedElement>
                                    <Border Background="{TemplateBinding OkBrush}"></Border>
                                </hc:StatusSwitchElement.CheckedElement>
                                <Border Background="{TemplateBinding NotOkBrush}"></Border>
                            </ToggleButton>
                            <Border Grid.Column="1" Background="White" Opacity="0"></Border>

                            <ContentPresenter x:Name="contentPresenter" Height="auto" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentSource="Content" hc:TextBlockAttach.AutoTooltip="True" TextElement.Foreground="{DynamicResource PrimaryTextBrush}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="3,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <!--<TextBlock Height="auto" Margin="3,0" FontSize="{StaticResource TextFontSize}" ToolTip="{TemplateBinding Text}" hc:TextBlockAttach.AutoTooltip="True" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Text="{TemplateBinding Text}"></TextBlock>-->
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource IotStateStyle}" TargetType="{x:Type local:IotState}"/>
</ResourceDictionary>